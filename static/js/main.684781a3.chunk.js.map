{"version":3,"sources":["context/TaskListContext.js","components/Task.js","components/TaskList.js","components/TaskForm.js","components/Header.js","components/App.js","index.js"],"names":["TaskListContext","createContext","TaskListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","tasks","setTasks","editItem","setEditItem","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuidv4","removeTask","filter","task","findItem","item","find","editTask","newTasks","map","children","Task","useContext","className","onClick","TaskList","length","TaskForm","setTitle","onSubmit","e","preventDefault","type","onChange","target","placeholder","Header","App","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,EAAkBC,0BAwChBC,EAtCiB,SAACC,GAC7B,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAD3B,EAGbC,mBAASL,GAHI,mBAGhCM,EAHgC,KAGzBC,EAHyB,OAKPF,mBAAS,MALF,mBAKhCG,EALgC,KAKtBC,EALsB,KAOvCC,qBAAU,WACNP,aAAaQ,QAAQ,QAASV,KAAKW,UAAUN,MAC9C,CAACA,IAsBJ,OACI,cAACV,EAAgBiB,SAAjB,CAA0BC,MAAO,CAAER,QAAOS,QArB9B,SAACC,GACbT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,QAAOC,GAAIC,mBAoBkBC,WAjBpC,SAACF,GAChBV,EAASD,EAAMc,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,KAAOA,OAgBqBK,SAblD,SAAAL,GACb,IAAMM,EAAOjB,EAAMkB,MAAK,SAAAH,GAAI,OAAIA,EAAKJ,KAAOA,KAE5CR,EAAYc,IAU6DE,SAP5D,SAACT,EAAOC,GACrB,IAAMS,EAAWpB,EAAMqB,KAAI,SAAAN,GAAI,OAAKA,EAAKJ,KAAOA,EAAM,CAAED,QAAOC,MAAOI,KACtEd,EAASmB,GACTjB,EAAY,OAIuED,YAAnF,SACKT,EAAM6B,YCbJC,EArBF,SAAC,GAAc,IAAZR,EAAW,EAAXA,KAAW,EACUS,qBAAWlC,GAApCuB,EADe,EACfA,WAAYG,EADG,EACHA,SACpB,OACI,qBAAIS,UAAU,YAAd,UACI,wBACIA,UAAU,sBACVC,QAAS,kBAAMb,EAAWE,EAAKJ,KAFnC,SAII,mBAAGc,UAAU,uBAEjB,iCAAOV,EAAKL,MAAZ,OAGA,wBAAQe,UAAU,oBAAoBC,QAAS,kBAAMV,EAASD,EAAKJ,KAAnE,SACI,mBAAGc,UAAU,qBCKdE,EAlBE,WAAO,IACZ3B,EAAUwB,qBAAWlC,GAArBU,MAER,OACI,8BACKA,EAAM4B,OACH,oBAAIH,UAAU,OAAd,SACKzB,EAAMqB,KAAI,SAAAN,GACP,OAAO,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKJ,SAIvC,qBAAKc,UAAU,WAAf,yBCwBLI,G,MArCE,WAAO,IAAD,EACqBL,qBAAWlC,GAA3CmB,EADW,EACXA,QAASP,EADE,EACFA,SAAUiB,EADR,EACQA,SADR,EAGOpB,mBAAS,IAHhB,mBAGZW,EAHY,KAGLoB,EAHK,KA2BnB,OARA1B,qBAAU,WAEF0B,EADA5B,EACSA,EAASQ,MAET,MAGd,CAACR,IAEA,uBAAM6B,SAnBW,SAACC,GAClBA,EAAEC,iBACG/B,EAIDiB,EAAST,EAAOR,EAASS,KAHzBF,EAAQC,GACRoB,EAAS,MAeiBL,UAAU,OAAxC,UACI,uBAAOS,KAAK,OAAO1B,MAAOE,EAAOe,UAAU,aAAaU,SAxB3C,SAACH,GAClBF,EAASE,EAAEI,OAAO5B,QAuBkE6B,YAAY,kBAE5F,yBAAQH,KAAK,SAAST,UAAU,mBAAhC,UAAqDvB,EAAW,OAAS,MAAzE,YCvBGoC,EATA,WACX,OACI,qBAAKb,UAAU,SAAf,SACI,0CCkBGc,EAhBH,WACR,OACI,cAAC,EAAD,UACI,qBAAKd,UAAU,YAAf,SACI,sBAAKA,UAAU,cAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,eCXxBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.684781a3.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nexport const TaskListContext = createContext()\n\nconst TaskListContextProvider = (props) => {\n    const initialState = JSON.parse(localStorage.getItem('tasks')) || []\n\n    const [tasks, setTasks] = useState(initialState)\n\n    const [editItem, setEditItem] = useState(null)\n\n    useEffect(() => {\n        localStorage.setItem('tasks', JSON.stringify(tasks))\n    }, [tasks])\n\n    const addTask = (title) => {\n        setTasks([...tasks, { title, id: uuidv4() }])\n\n    }\n    const removeTask = (id) => {\n        setTasks(tasks.filter(task => task.id !== id))\n    }\n\n    const findItem = id => {\n        const item = tasks.find(task => task.id === id)\n\n        setEditItem(item)\n    }\n\n    const editTask = (title, id) => {\n        const newTasks = tasks.map(task => (task.id === id) ? { title, id } : task)\n        setTasks(newTasks)\n        setEditItem(null)\n    }\n\n    return (\n        <TaskListContext.Provider value={{ tasks, addTask, removeTask, findItem, editTask, editItem }}>\n            {props.children}\n        </TaskListContext.Provider>\n    )\n}\n\nexport default TaskListContextProvider","import React, { useContext } from 'react'\nimport { TaskListContext } from '../context/TaskListContext'\n\nconst Task = ({ task }) => {\n    const { removeTask, findItem } = useContext(TaskListContext)\n    return (\n        <li className=\"list-item\">\n            <button\n                className=\"btn-delete task-btn\"\n                onClick={() => removeTask(task.id)}\n            >\n                <i className=\"fas fa-trash-alt\"></i>\n            </button>\n            <span>{task.title} </span>\n\n\n            <button className=\"btn-edit task-btn\" onClick={() => findItem(task.id)}>\n                <i className=\"fas fa-pen\"></i>\n            </button>\n\n        </li>\n    )\n}\n\nexport default Task\n","import React, { useContext } from \"react\";\nimport { TaskListContext } from \"../context/TaskListContext\";\nimport Task from \"./Task\";\n\nconst TaskList = () => {\n    const { tasks } = useContext(TaskListContext);\n\n    return (\n        <div>\n            {tasks.length ? (\n                <ul className=\"list\">\n                    {tasks.map(task => {\n                        return <Task task={task} key={task.id} />;\n                    })}\n                </ul>\n            ) : (\n                    <div className=\"no-tasks\">No Tasks</div>\n                )}\n        </div>\n    );\n};\n\nexport default TaskList;","import React, { useContext, useState, useEffect } from 'react'\nimport { TaskListContext } from '../context/TaskListContext'\n\nconst TaskForm = () => {\n    const { addTask, editItem, editTask } = useContext(TaskListContext)\n\n    const [title, setTitle] = useState('')\n\n    const handleChange = (e) => {\n        setTitle(e.target.value)\n\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (!editItem) {\n            addTask(title)\n            setTitle('')\n        } else {\n            editTask(title, editItem.id)\n        }\n    }\n\n    useEffect(() => {\n        if (editItem) {\n            setTitle(editItem.title)\n        } else {\n            setTitle('')\n        }\n\n    }, [editItem])\n    return (\n        <form onSubmit={handleSubmit} className='form'>\n            <input type='text' value={title} className='task-input' onChange={handleChange} placeholder='create a task' />\n\n            <button type='submit' className='btn add-task-btn' >{editItem ? 'edit' : 'add'} </button>\n\n        </form>\n    )\n}\n\nexport default TaskForm","import React from 'react'\n\nconst Header = () => {\n    return (\n        <div className='header'>\n            <h1>Tasks</h1>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport TaskList from './TaskList'\nimport TaskListContextProvider from '../context/TaskListContext'\nimport '../App.css'\nimport TaskForm from './TaskForm'\nimport Header from './Header'\n\nconst App = () => {\n    return (\n        <TaskListContextProvider>\n            <div className='container'>\n                <div className='app-wrapper'>\n                    <Header />\n                    <div className='main'>\n                        <TaskForm />\n                        <TaskList />\n                    </div>\n                </div>\n            </div>\n        </TaskListContextProvider>)\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}